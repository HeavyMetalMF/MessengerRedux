{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileStatusHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","React","Component","ProfileStatusHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","src","className","c","description","ava","photos","large","Preloader","Post","prop","item","message","likes","maxLength10","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","postsElements","posts","map","post","postsBlock","data","addPost","postText","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","userID","authUserID","history","push","getUsersProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.cc03ec6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__tZYWH\",\"description\":\"ProfileInfo_description__1qwuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3CIJV\",\"postsBlock\":\"MyPosts_postsBlock__3FvNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2krKm\"};","import React from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () =>  {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () =>  {\r\n        this.setState({\r\n            editMode: false,\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode} >{this.props.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProfileStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () =>  {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode} >{ props.status || 'No status' }</span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus onBlur={deactivateEditMode} onChange={onStatusChange} value={status}\r\n                       />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusHooks;\r\n","import React from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    // console.log(props.profile)\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://via.placeholder.com/900x200'/>\r\n            </div>\r\n            <div className={c.description}>\r\n                <img className={c.ava}\r\n                     src={props.profile.photos.large}/>\r\n            </div>\r\n            <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport c from './Post.module.css';\r\n\r\nconst Post = (prop) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src='https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk3xj3SNsykl6tc1aFKIVZ6aaKTM5SRkZCeTgDn6uOyic'/>\r\n            {prop.message}\r\n            <div>\r\n                <span>Like</span> {prop.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'postText'} component={Textarea} placeholder={'Введите ваше сообщение'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={'button'} >Добавить пост</Field>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    // form: 'ProfileAddNewPostForm'\r\n    form: 'AddPost'\r\n})(MessageForm);\r\n\r\nconst MyPosts = (prop) => {\r\n    let postsElements = prop.posts.map(post => <Post likes={post.likes} message={post.message}/>);\r\n\r\n    let AddPost = (data) => {\r\n        // console.log(data);\r\n        prop.addPost(data.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={c.postsBlock}>\r\n            <h2>Мои посты</h2>\r\n            <MessageReduxForm  onSubmit={AddPost}/>\r\n            <div className={c.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostsContainer = (prop) => {\r\n//     // console.log(prop)\r\n//     // let state = prop.store.getState();\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n//                     let addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     };\r\n//\r\n//                     let onPostChange = (text) => {\r\n//                         store.dispatch(updateTextActionCreator(text));\r\n//                         // console.log(text)\r\n//                     }\r\n//                     return <MyPosts updateNewPostText={onPostChange}\r\n//                                     addPost={addPost}\r\n//                                     posts={state.profilePage.posts}\r\n//                                     newPostText={state.profilePage.newPostText}/>\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {dispatch(addPostActionCreator(postText))}\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    // console.log(prop)\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer  extends React.Component{\r\n    componentDidMount() {\r\n        // console.log(this.props);\r\n        let userId = this.props.match.params.userID;\r\n        if(!userId){\r\n            userId = this.props.authUserID;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        };\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.props.isAuth)\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserID: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n//\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, {getUsersProfile})(WithUrlDataContainerComponent);"],"sourceRoot":""}
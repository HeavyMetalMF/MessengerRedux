{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.js","redux/profile-reducer.js","redux/messages-reducer.js","redux/sidebar-reducer.js","redux/reduxStore.js","components/Header/Header.js","components/Navbar/Navbar.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_TEXT","initialState","posts","id","message","likes","newPostText","profileReducer","state","action","type","newPost","push","text","UPDATE_MESSAGE","SEND_MESSAGE","dialogs","name","messages","messageText","messagesReducer","sidebarReducer","reducers","combineReducers","profilePage","messagesPage","sidebar","store","createStore","window","Header","className","c","header","src","Navbar","classes","nav","item","activeClassName","active","to","ProfileInfo","description","ava","Post","prop","MyPosts","console","log","postsElements","map","post","postElement","React","createRef","postsBlock","onChange","current","value","updateNewPostText","ref","onClick","addPost","MyPostsContainer","connect","dispatch","updateTextActionCreator","Profile","Message","DialogItem","minAva","width","height","mes","Dialogs","dialogsElements","d","messagesElements","m","dialogs_items","e","target","updateMessageCreator","placeholder","sendMessage","DialogsContainer","App","path","render","renderTree","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.2c9ecd43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__1AX-6\",\"description\":\"ProfileInfo_description__2v286\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3PW92\",\"postsBlock\":\"MyPosts_postsBlock__1IVB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__11Ezq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2jY7l\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = 'add-post';\r\nconst UPDATE_TEXT = 'update-text';\r\n\r\nlet initialState = {\r\n    posts : [\r\n        {\r\n            id: 1,\r\n            message: 'Привет как дела',\r\n            likes: 0\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Это мой пост',\r\n            likes: 9\r\n        },\r\n    ],\r\n    newPostText: 'romanPrivet',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likes: 0\r\n            };\r\n\r\n            state.posts.push(newPost);\r\n            state.newPostText = '';\r\n            break;\r\n        case UPDATE_TEXT:\r\n            state.newPostText = action.text;\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\nexport const  updateTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_TEXT,\r\n        text: text\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const UPDATE_MESSAGE = 'update-message';\r\nconst SEND_MESSAGE = 'send-message';\r\n\r\nlet initialState = {\r\n    dialogs : [\r\n        {\r\n            id: 1,\r\n            name: 'Диалог 1'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Диалог 2'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Диалог 3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Диалог 4'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Диалог 5'\r\n        },\r\n    ],\r\n    messages : [\r\n        {\r\n            id: 1,\r\n            message: 'Сообщение 1'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Сообщение 2'\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Сообщение 3'\r\n        },\r\n        {\r\n            id: 4,\r\n            message: 'Сообщение 4'\r\n        },\r\n        {\r\n            id: 5,\r\n            message: 'Сообщение 5'\r\n        },\r\n    ],\r\n    messageText: 'text',\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_MESSAGE:\r\n            state.messageText = action.text;\r\n            break;\r\n        case SEND_MESSAGE:\r\n            let message = state.messageText;\r\n            state.messageText = '';\r\n            state.messages.push({\r\n                id: 6,\r\n                message: message\r\n            });\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const  updateMessageCreator = (text) => {\r\n    return {\r\n        type: UPDATE_MESSAGE,\r\n        text: text\r\n    }\r\n}\r\nexport const  sendMessageCreator = (text) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        text: text\r\n    }\r\n}\r\nexport default messagesReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport c from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={c.header}>\r\n            <img src='https://i.pinimg.com/originals/71/ff/89/71ff89fbe1987a5684aa48b453b25184.png'/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/profile' >Профиль</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/dialogs'>Сообщения</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/news'>Новости</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/music'>Музыка</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/settings'>Настройки</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://via.placeholder.com/900x200'/>\r\n            </div>\r\n            <div className={c.description}>\r\n                <img className={c.ava}\r\n                     src='https://img-fotki.yandex.ru/get/222565/493212545.4dc/0_1d9d38_ba3dcc3_XL.jpg'/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport c from './Post.module.css';\r\n\r\nconst Post = (prop) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src='https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk3xj3SNsykl6tc1aFKIVZ6aaKTM5SRkZCeTgDn6uOyic'/>\r\n            {prop.message}\r\n            <div>\r\n                <span>Like</span> {prop.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (prop) => {\r\n    console.log(prop)\r\n    let postsElements = prop.posts.map(post => <Post likes={post.likes} message={post.message}/>);\r\n\r\n    let postElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        prop.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = postElement.current.value;\r\n        prop.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={c.postsBlock}>\r\n            <h2>Мои посты</h2>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={postElement} value={prop.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPost }>Добавить пост</button>\r\n                </div>\r\n            </div>\r\n            <div className={c.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostsContainer = (prop) => {\r\n//     // console.log(prop)\r\n//     // let state = prop.store.getState();\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n//                     let addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     };\r\n//\r\n//                     let onPostChange = (text) => {\r\n//                         store.dispatch(updateTextActionCreator(text));\r\n//                         // console.log(text)\r\n//                     }\r\n//                     return <MyPosts updateNewPostText={onPostChange}\r\n//                                     addPost={addPost}\r\n//                                     posts={state.profilePage.posts}\r\n//                                     newPostText={state.profilePage.newPostText}/>\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {dispatch(updateTextActionCreator(text))},\r\n        addPost: () => {dispatch(addPostActionCreator())}\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (prop) => {\r\n    // console.log(prop)\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import c from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (prop) => {\r\n    return(\r\n        <div className={c.message}>\r\n            {prop.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import c from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (prop) => {\r\n    return(\r\n        <div className={c.item + ' ' + c.active}>\r\n            <div>\r\n                <img className={c.minAva} src='https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk3xj3SNsykl6tc1aFKIVZ6aaKTM5SRkZCeTgDn6uOyic' width='40px' height='40px' />\r\n            </div>\r\n\r\n            <div className={c.mes}>\r\n                <NavLink activeClassName={c.active} to={'/dialogs/' + prop.id}>{prop.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import c from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\n\r\nconst Dialogs = (prop) => {\r\n    // console.log(prop)\r\n    let state = prop.messagesPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n\r\n    let messagesElements = state.messages.map(m => <Message message={m.message}/>)\r\n    let messageText = state.messageText;\r\n\r\n    let onSendMessageClick = () => {\r\n        prop.sendMessage();\r\n        // prop.store.dispatch(sendMessageCreator())\r\n    }\r\n    let onNewMessageChange = (e) => {\r\n        let text = e.target.value;\r\n        // prop.store.dispatch(updateMessageCreator(text))\r\n        prop.updateMessageCreator(text);\r\n    }\r\n\r\n    return(\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={c.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea onChange={onNewMessageChange} value={messageText} placeholder='Введите сообщение'></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick} >Отправить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import {sendMessageCreator, updateMessageCreator} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const DialogsContainer = (prop) => {\r\n//     // console.log(prop)\r\n//\r\n//\r\n//     return <StoreContext.Consumer>\r\n//         {\r\n//         (store) => {\r\n//             let onSendMessageClick = () => {\r\n//                 store.dispatch(sendMessageCreator())\r\n//             }\r\n//             let onNewMessageChange = (text) => {\r\n//                 store.dispatch(updateMessageCreator(text))\r\n//             }\r\n//             return <Dialogs messagesPage={store.getState().messagesPage}\r\n//                             updateMessageCreator={onNewMessageChange}\r\n//                             sendMessage={onSendMessageClick}/>\r\n//         }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateMessageCreator: (text) => {dispatch(updateMessageCreator(text))},\r\n        sendMessage: () => {dispatch(sendMessageCreator())}\r\n    }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import './App.css';\nimport React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\nfunction App(prop) {\n    // console.log(prop)\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    {/*<Route path='/profile' component={Profile}/>*/}\n                    {/*<Route path='/dialogs' component={Dialogs}/>*/}\n\n                    <Route path='/profile' render={() => <Profile />}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer />}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/reduxStore\";\nimport App from './App';\nimport {Provider} from \"react-redux\";\n\nlet renderTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrenderTree(store.getState());\n\nstore.subscribe(() => {\n    renderTree(store.getState())\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__17YIk\",\"dialogs_items\":\"Dialogs_dialogs_items__16X3A\",\"item\":\"Dialogs_item__J2SGG\",\"minAva\":\"Dialogs_minAva__1FbZ2\",\"mes\":\"Dialogs_mes__1NphW\",\"active\":\"Dialogs_active__qkaxE\",\"messages\":\"Dialogs_messages__2UhRH\",\"message\":\"Dialogs_message__yhbJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__qADCI\",\"item\":\"Navbar_item__3KxC7\",\"active\":\"Navbar_active__Xr8TO\"};"],"sourceRoot":""}
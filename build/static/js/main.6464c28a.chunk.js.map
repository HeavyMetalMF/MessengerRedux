{"version":3,"sources":["redux/messages-reducer.js","Hoc/withAuthRedirect.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","components/Navbar/Navbar.module.css","api/api.js","components/Dialogs/Dialogs.module.css","redux/users-reducer.js","reportWebVitals.js","redux/sidebar-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/reduxStore.js","components/Navbar/Navbar.js","assets/img/user.png","components/Users/Paginator.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.js","App.js","index.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","assets/img/Spin-1s-200px.svg","components/common/preloader/Preloader.js","components/Users/Users.module.css","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","messageBody","type","messagesReducer","state","action","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","connect","props","to","Message","prop","className","c","DialogItem","item","active","minAva","src","width","height","mes","activeClassName","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","Dialogs","messagesPage","dialogsElements","map","d","messagesElements","m","messageText","dialogs_items","data","sendMessage","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","unfollow","userId","delete","follow","post","getProfile","userID","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","setIsFetching","setFollowingProgress","following","requestUsers","page","dispatch","items","totalCount","resultCode","usersReducer","user","followed","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","a","authReducer","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","sidebar","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","classes","nav","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","onClick","p","cn","selectedPage","pageNumber","e","onPageChanged","Users","photos","small","userPhoto","disabled","some","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Header","header","loginBlock","HeaderContainer","LoginReduxForm","log","Input","error","summaryErrorForm","stopSubmit","_error","formData","ProfileContainer","lazy","DialogsContainer","App","initializeApp","path","render","fallback","Suspense","ReactDOM","document","getElementById","FormControl","input","meta","child","touched","formControl","children","restProps","value","maxLength","length","loader","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likes","profile","addPostActionCreator","postText","setStatus","getUsersProfile","newPost","newPostText"],"mappings":"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","file":"static/js/main.6464c28a.chunk.js","sourcesContent":["const SEND_MESSAGE = 'send-message';\r\n\r\nlet initialState = {\r\n    dialogs : [\r\n        {\r\n            id: 1,\r\n            name: 'Диалог 1'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Диалог 2'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Диалог 3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Диалог 4'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Диалог 5'\r\n        },\r\n    ],\r\n    messages : [\r\n        {\r\n            id: 1,\r\n            message: 'Сообщение 1'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Сообщение 2'\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Сообщение 3'\r\n        },\r\n        {\r\n            id: 4,\r\n            message: 'Сообщение 4'\r\n        },\r\n        {\r\n            id: 5,\r\n            message: 'Сообщение 5'\r\n        },\r\n    ],\r\n\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let message = action.messageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: message}],\r\n            };\r\n            // stateCopy.messageText = '';\r\n            // stateCopy.messages.push({id: 6, message: message});\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const  sendMessageCreator = (messageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        messageBody: messageBody\r\n    }\r\n}\r\nexport default messagesReducer;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Dialogs from \"../components/Dialogs/Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    function RedirectComponent(props) {\r\n        if (!props.isAuth){\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n        return <Component {...props}/>\r\n    }\r\n    // class RedirectComponent extends React.Component{\r\n    //     render() {\r\n    //         if (!this.props.isAuth){\r\n    //             return <Redirect to={'/login'}/>\r\n    //         }\r\n    //         return <Component {...this.props}/>\r\n    //     }\r\n    // }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import c from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (prop) => {\r\n    return(\r\n        <div className={c.message}>\r\n            {prop.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import c from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (prop) => {\r\n    return(\r\n        <div className={c.item + ' ' + c.active}>\r\n            <div>\r\n                <img className={c.minAva} src='https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk3xj3SNsykl6tc1aFKIVZ6aaKTM5SRkZCeTgDn6uOyic' width='40px' height='40px' />\r\n            </div>\r\n\r\n            <div className={c.mes}>\r\n                <NavLink activeClassName={c.active} to={'/dialogs/' + prop.id}>{prop.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import c from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, FieldArray, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength50]} component={Textarea} name={'messageBody'} placeholder={'Введите сообщение'}/>\r\n            </div>\r\n            <div>\r\n                <Field component={'button'}>Отправить</Field>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'addMessage'\r\n})(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    // console.log(props)\r\n    let state = props.messagesPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n    let messageText = state.messageText;\r\n\r\n    let addNewMessage = (data) => {\r\n        props.sendMessage(data.messageBody);\r\n        data.messageBody = '';\r\n    }\r\n\r\n    if (!props.isAuth){\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return(\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={c.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__RxrzF\",\"item\":\"Navbar_item__g21C2\",\"active\":\"Navbar_active__Y-qcb\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: { 'API-KEY': '9711c675-0590-4395-8034-4568a71705d0' }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId){\r\n       return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n\r\n    },\r\n    getProfile(userID){\r\n        console.warn('Используйте новый метод');\r\n        return profileAPI.getProfile(userID);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID){\r\n        return instance.get(`profile/${userID}`)\r\n    },\r\n    getStatus(userID){\r\n        return instance.get(`profile/status/${userID}`)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`auth/login`, { email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3jq1C\",\"dialogs_items\":\"Dialogs_dialogs_items__2cXJe\",\"item\":\"Dialogs_item__s2gPa\",\"minAva\":\"Dialogs_minAva__ye0yh\",\"mes\":\"Dialogs_mes__2JVbY\",\"active\":\"Dialogs_active__33CDc\",\"messages\":\"Dialogs_messages__2nT1Z\",\"message\":\"Dialogs_message__1tXGN\"};","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'follow';\r\nconst UNFOLLOW = 'unfollow';\r\nconst SET_USERS = 'setUsers';\r\nconst SET_CURRENT_PAGE = 'setCurrentPage';\r\nconst SET_TOTAL_USERS_COUNT = 'setTotalCount';\r\nconst TOGGLE_IS_FETCHING = 'toggleIsFetching';\r\nconst TOGGLE_IS_FOLLOWING = 'toggleIsFollowing';\r\n\r\nlet initialState = {\r\n    users : [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [2,3],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return  {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId){\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        case UNFOLLOW:\r\n            return  {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId){\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const  followSuccess = (ID) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: ID\r\n    }\r\n}\r\nexport const  unfollowSuccess = (ID) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: ID\r\n    }\r\n}\r\nexport const  setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\nexport const  setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: currentPage\r\n    }\r\n}\r\nexport const  setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsersCount: totalUsersCount\r\n    }\r\n}\r\nexport const  setIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\nexport const  setFollowingProgress = (following, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING,\r\n        followingInProgress: following,\r\n        userId: userId,\r\n    }\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize)\r\n            .then(data => {\r\n                // console.log(data)\r\n                dispatch(setIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.follow(userId).then(\r\n            data => {\r\n                if (data.resultCode === 0){\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            }\r\n        )\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(\r\n            data => {\r\n                if (data.resultCode === 0){\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default usersReducer;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'set-user-data';\r\nconst SEND_MESSAGE = 'send-message';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: true,\r\n    isAuth: false,\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        // stateCopy.messageText = '';\r\n        // stateCopy.messages.push({id: 6, message: message});\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {\r\n            userId: userId,\r\n            email: email,\r\n            login: login,\r\n            isAuth: isAuth,\r\n        }\r\n    }\r\n}\r\n// export const getAuthUserData = () => {\r\n//     return (dispatch) => {\r\n//         return authAPI.me()\r\n//             .then(response => {\r\n//                 if (response.data.resultCode === 0){\r\n//                     let {id, email, login} = response.data.data;\r\n//                     dispatch(setAuthUserData(id, email, login, true));\r\n//                 }\r\n//             })\r\n//     }\r\n// }\r\n\r\nexport const getAuthUserData = () =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        authAPI.login(email, password, rememberMe)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(getAuthUserData());\r\n                } else {\r\n                    let message = response.data.messages[0];\r\n                    let action = stopSubmit('login', {_error: message});\r\n                    debugger;\r\n                    dispatch(action);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        authAPI.logout()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUserData(null, null, null, false));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const  initialize_sucsess = () => {\r\n    return {\r\n        type: SET_INITIALIZED,\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let dispatchResultPromise = dispatch(getAuthUserData());\r\n        dispatchResultPromise.then(() => {\r\n            dispatch(initialize_sucsess());\r\n        })\r\n        // dispatchResultPromise.then(dispatch(initialize_sucsess));\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from \"react\";\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/users'>Пользователи</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/profile' >Профиль</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/dialogs'>Сообщения</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/news'>Новости</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/music'>Музыка</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/settings'>Настройки</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/user.aa43b272.png\";","import React, {useState} from \"react\";\r\nimport c from \"./Users.module.css\";\r\nimport cn from 'classnames'\r\n\r\n/* 0 5 10 */\r\n\r\nlet Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let leftPortionPageNumber2 = (portionNumber * props.portionSize) - 5;\r\n    let rightPortionNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                portionNumber > 1 ? <button onClick={() => {setPortionNumber(portionNumber - 1)}}>Назад</button> : ''\r\n            }\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionNumber)\r\n                .map(p => {\r\n                return <span className={cn({[c.selectedPage]: props.currentPage === p}, c.pageNumber)}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n            {portionCount > portionNumber ? <button onClick={() => {setPortionNumber(portionNumber + 1)}}>Вперед</button> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport c from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/img/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nlet  Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator onPageChanged={props.onPageChanged}\r\n                       totalUsersCount={props.totalUsersCount}\r\n                       pageSize={props.pageSize}\r\n                       currentPage={props.currentPage}\r\n                       portionSize={10}\r\n                       onPageChanged={props.onPageChanged}/>\r\n            {\r\n                props.users.map(user =>\r\n                    <div key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={c.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={ () => {\r\n                                    props.unfollow(user.id);\r\n                                } }>Unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={ () => {\r\n                                    props.follow(user.id);\r\n                                } }>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{'user.location.country'}</div>\r\n                            <div>{'user.location.city'}</div>\r\n                        </span>\r\n                    </span>\r\n                    </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    setFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n         this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader/> : null }\r\n            <Users\r\n                users={this.props.users}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                setFollowingProgress={this.props.setFollowingProgress}\r\n            />\r\n            </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n// TODO для понимания как работает mapDispatchToProps\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (usersID) =>{\r\n//             dispatch(follow(usersID))\r\n//         },\r\n//         unfollow: (usersID) => {\r\n//             dispatch(unfollow(usersID))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsers(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPage(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCount(totalCount))\r\n//         },\r\n//         setIsFetching: (isFetching) => {\r\n//             dispatch(setIsFetching(isFetching))\r\n//         },\r\n//     }\r\n// }\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(UsersContainer);\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        setFollowingProgress,\r\n        requestUsers: requestUsers,\r\n    } )\r\n)(UsersContainer);\r\n\r\n// export default connect(mapStateToProps, {\r\n//     follow,\r\n//     unfollow,\r\n//     setCurrentPage,\r\n//     setFollowingProgress,\r\n//     requestUsers,\r\n// } )(AuthRedirectComponent);","import React from \"react\";\r\nimport c from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={c.header}>\r\n            <img src='https://i.pinimg.com/originals/71/ff/89/71ff89fbe1987a5684aa48b453b25184.png'/>\r\n            <div className={c.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div> {props.login} <button onClick={props.logout}>Выйти</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n    // componentDidMount() {\r\n    //     this.props.getAuthUserData();\r\n    // }\r\n\r\n    render() {\r\n        return (<Header {...this.props}/>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport c from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    console.log(props)\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field validate={[required]} name={'email'} component={Input} placeholder='email'/>\r\n                </div>\r\n                <div>\r\n                    <Field validate={[required]} name={'password'} component={Input} placeholder='password'/>\r\n                </div>\r\n                <div>\r\n                    <Field  name={'remember'} component={Input} type='checkbox'/> remember\r\n                </div>\r\n                {props.error ? <div className={c.summaryErrorForm}>\r\n                    {props.error}\r\n                </div> : ''}\r\n                <div>\r\n                    <button type='submit'>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import './App.css';\r\nimport React from \"react\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {BrowserRouter, Route, HashRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/preloader/Preloader\";\r\nimport {Suspense} from 'react'\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer')); // Ленивая загрузка\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')); // Ленивая загрузка\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        // console.log(prop)\r\n        if (!this.props.initialized){\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <HashRouter>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        {/*<Route path='/profile' component={Profile}/>*/}\r\n                        {/*<Route path='/dialogs' component={Dialogs}/>*/}\r\n\r\n                        <Route path='/profile/:userID?' render={() =>\r\n                            <Suspense fallback={<div>loading ...</div>}>\r\n                                <ProfileContainer />\r\n                            </Suspense>}/>\r\n                        <Route path='/dialogs' render={() =>\r\n                            <React.Suspense fallback={<Preloader />}>\r\n                                <DialogsContainer />\r\n                            </React.Suspense>\r\n                        }/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/reduxStore\";\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// store.subscribe(() => {\r\n//     renderTree(store.getState())\r\n// });\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","import c from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const error = meta.touched && meta.error;\r\n    return(\r\n        <div className={c.formControl + \" \" + (error ? c.error : '')}>\r\n            {props.children}\r\n            <div>\r\n                {error ? <span>{meta.error}</span> : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl{...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Обязательное поле';\r\n}\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Максимальная длинна ${maxLength} символов`;\r\n    return undefined;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Spin-1s-200px.2cfb1e57.svg\";","import loader from \"../../../assets/img/Spin-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={loader}/>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1EAF0\",\"selectedPage\":\"Users_selectedPage__35nDu\",\"pageNumber\":\"Users_pageNumber__3cE_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__15Lm_\",\"error\":\"FormsControls_error__2epMi\",\"summaryErrorForm\":\"FormsControls_summaryErrorForm__Yd2hw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1X91C\",\"loginBlock\":\"Header_loginBlock___rP3G\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {setFollowingProgress, unfollowSuccess} from \"./users-reducer\";\r\n\r\nconst ADD_POST = 'add-post';\r\nconst SET_USER_PROFILE = 'SetUserProfile';\r\nconst SET_STATUS = 'SetStatus';\r\n\r\nlet initialState = {\r\n    posts : [\r\n        {\r\n            id: 1,\r\n            message: 'Привет как дела',\r\n            likes: 0\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Это мой пост',\r\n            likes: 9\r\n        },\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postText,\r\n                likes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:{\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS:{\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (postText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        postText: postText\r\n    }\r\n}\r\n\r\nexport const setUsersProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile: profile\r\n    }\r\n}\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status: status,\r\n    }\r\n}\r\nexport const getUsersProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUsersProfile(response.data));\r\n            })\r\n    }\r\n}\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setStatus(response.data));\r\n            })\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(setStatus(status));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport default profileReducer;"],"sourceRoot":""}
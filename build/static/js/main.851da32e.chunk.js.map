{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.js","redux/profile-reducer.js","redux/messages-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/reduxStore.js","components/Header/Header.js","components/Navbar/Navbar.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","assets/img/user.png","components/Users/UsersC.js","components/Users/UsersContainer.js","App.js","index.js","components/Dialogs/Dialogs.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_TEXT","initialState","posts","id","message","likes","newPostText","profileReducer","state","action","type","newPost","text","UPDATE_MESSAGE","SEND_MESSAGE","dialogs","name","messages","messageText","messagesReducer","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","users","photoURL","followed","fullname","status","location","city","country","usersReducer","map","user","userId","reducers","combineReducers","profilePage","messagesPage","sidebar","usersPage","store","createStore","window","Header","className","c","header","src","Navbar","classes","nav","item","activeClassName","active","to","ProfileInfo","description","ava","Post","prop","MyPosts","postsElements","post","postElement","React","createRef","postsBlock","onChange","current","value","updateNewPostText","ref","onClick","addPost","MyPostsContainer","connect","dispatch","updateTextActionCreator","Profile","Message","DialogItem","minAva","width","height","mes","Dialogs","dialogsElements","d","messagesElements","m","dialogs_items","e","target","updateMessageCreator","placeholder","sendMessage","DialogsContainer","Users","getUsers","length","axios","response","setUsers","data","items","this","photos","small","userPhoto","unfollow","follow","Component","UsersContainer","usersID","setUsersAC","UsersC","App","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.851da32e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1xmZX\",\"item\":\"Navbar_item__256B-\",\"active\":\"Navbar_active__19FAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3Vigs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__3Enuj\",\"description\":\"ProfileInfo_description__1tDxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__16yQV\",\"postsBlock\":\"MyPosts_postsBlock__3ayJ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2VVMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2cwQ5\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = 'add-post';\r\nconst UPDATE_TEXT = 'update-text';\r\n\r\nlet initialState = {\r\n    posts : [\r\n        {\r\n            id: 1,\r\n            message: 'Привет как дела',\r\n            likes: 0\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Это мой пост',\r\n            likes: 9\r\n        },\r\n    ],\r\n    newPostText: 'romanPrivet',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_TEXT:{\r\n            return {\r\n                ...state,\r\n                newPostText: action.text\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\nexport const  updateTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_TEXT,\r\n        text: text\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const UPDATE_MESSAGE = 'update-message';\r\nconst SEND_MESSAGE = 'send-message';\r\n\r\nlet initialState = {\r\n    dialogs : [\r\n        {\r\n            id: 1,\r\n            name: 'Диалог 1'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Диалог 2'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Диалог 3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Диалог 4'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Диалог 5'\r\n        },\r\n    ],\r\n    messages : [\r\n        {\r\n            id: 1,\r\n            message: 'Сообщение 1'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Сообщение 2'\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Сообщение 3'\r\n        },\r\n        {\r\n            id: 4,\r\n            message: 'Сообщение 4'\r\n        },\r\n        {\r\n            id: 5,\r\n            message: 'Сообщение 5'\r\n        },\r\n    ],\r\n    messageText: 'text',\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageText: action.text\r\n            };\r\n        case SEND_MESSAGE:\r\n            let message = state.messageText;\r\n            return {\r\n                ...state,\r\n                messageText: '',\r\n                messages: [...state.messages, {id: 6, message: message}],\r\n            };\r\n            // stateCopy.messageText = '';\r\n            // stateCopy.messages.push({id: 6, message: message});\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const  updateMessageCreator = (text) => {\r\n    return {\r\n        type: UPDATE_MESSAGE,\r\n        text: text\r\n    }\r\n}\r\nexport const  sendMessageCreator = (text) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        text: text\r\n    }\r\n}\r\nexport default messagesReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer;","const FOLLOW = 'follow';\r\nconst UNFOLLOW = 'unfollow';\r\nconst SET_USERS = 'setUsers';\r\n\r\nlet initialState = {\r\n    users : [\r\n        {id: 1, photoURL: 'https://whatsism.com/uploads/posts/2018-07/1530546590_tx962vdsiqi.jpg', followed: false, fullname: 'Roman', status: 'I am a boss Roman', location: {city: 'Minsk', country: 'Belarus'}},\r\n        {id: 2, photoURL: 'https://whatsism.com/uploads/posts/2018-07/1530546590_tx962vdsiqi.jpg', followed: true, fullname: 'Alina', status: 'I am a boss Alina', location: {city: 'Moscow', country: 'Russia'}},\r\n        {id: 3, photoURL: 'https://whatsism.com/uploads/posts/2018-07/1530546590_tx962vdsiqi.jpg', followed: false, fullname: 'Nastya', status: 'I am a boss Nastya', location: {city: 'Kiev', country: 'Ukraine'}},\r\n        {id: 4, photoURL: 'https://whatsism.com/uploads/posts/2018-07/1530546590_tx962vdsiqi.jpg', followed: false, fullname: 'Natalya', status: 'I am a boss Natalya', location: {city: 'Kassel', country: 'Germany'}},\r\n    ]\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return  {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId){\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        case UNFOLLOW:\r\n            return  {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId){\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...state.users, ...action.users]}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (ID) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: ID\r\n    }\r\n}\r\nexport const  unfollowAC = (ID) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: ID\r\n    }\r\n}\r\nexport const  setUsersAC = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport c from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={c.header}>\r\n            <img src='https://i.pinimg.com/originals/71/ff/89/71ff89fbe1987a5684aa48b453b25184.png'/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/profile' >Профиль</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/dialogs'>Сообщения</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/news'>Новости</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/music'>Музыка</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} to='/settings'>Настройки</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://via.placeholder.com/900x200'/>\r\n            </div>\r\n            <div className={c.description}>\r\n                <img className={c.ava}\r\n                     src='https://img-fotki.yandex.ru/get/222565/493212545.4dc/0_1d9d38_ba3dcc3_XL.jpg'/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport c from './Post.module.css';\r\n\r\nconst Post = (prop) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src='https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk3xj3SNsykl6tc1aFKIVZ6aaKTM5SRkZCeTgDn6uOyic'/>\r\n            {prop.message}\r\n            <div>\r\n                <span>Like</span> {prop.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (prop) => {\r\n    // console.log(prop)\r\n    let postsElements = prop.posts.map(post => <Post likes={post.likes} message={post.message}/>);\r\n\r\n    let postElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        prop.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = postElement.current.value;\r\n        prop.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={c.postsBlock}>\r\n            <h2>Мои посты</h2>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={postElement} value={prop.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPost }>Добавить пост</button>\r\n                </div>\r\n            </div>\r\n            <div className={c.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostsContainer = (prop) => {\r\n//     // console.log(prop)\r\n//     // let state = prop.store.getState();\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n//                     let addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     };\r\n//\r\n//                     let onPostChange = (text) => {\r\n//                         store.dispatch(updateTextActionCreator(text));\r\n//                         // console.log(text)\r\n//                     }\r\n//                     return <MyPosts updateNewPostText={onPostChange}\r\n//                                     addPost={addPost}\r\n//                                     posts={state.profilePage.posts}\r\n//                                     newPostText={state.profilePage.newPostText}/>\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {dispatch(updateTextActionCreator(text))},\r\n        addPost: () => {dispatch(addPostActionCreator())}\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (prop) => {\r\n    // console.log(prop)\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import c from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (prop) => {\r\n    return(\r\n        <div className={c.message}>\r\n            {prop.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import c from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (prop) => {\r\n    return(\r\n        <div className={c.item + ' ' + c.active}>\r\n            <div>\r\n                <img className={c.minAva} src='https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk3xj3SNsykl6tc1aFKIVZ6aaKTM5SRkZCeTgDn6uOyic' width='40px' height='40px' />\r\n            </div>\r\n\r\n            <div className={c.mes}>\r\n                <NavLink activeClassName={c.active} to={'/dialogs/' + prop.id}>{prop.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import c from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\n\r\nconst Dialogs = (prop) => {\r\n    // console.log(prop)\r\n    let state = prop.messagesPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n    let messageText = state.messageText;\r\n\r\n    let onSendMessageClick = () => {\r\n        prop.sendMessage();\r\n        // prop.store.dispatch(sendMessageCreator())\r\n    }\r\n    let onNewMessageChange = (e) => {\r\n        let text = e.target.value;\r\n        // prop.store.dispatch(updateMessageCreator(text))\r\n        prop.updateMessageCreator(text);\r\n    }\r\n\r\n    return(\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={c.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea onChange={onNewMessageChange} value={messageText} placeholder='Введите сообщение'></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick} >Отправить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import {sendMessageCreator, updateMessageCreator} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const DialogsContainer = (prop) => {\r\n//     // console.log(prop)\r\n//\r\n//\r\n//     return <StoreContext.Consumer>\r\n//         {\r\n//         (store) => {\r\n//             let onSendMessageClick = () => {\r\n//                 store.dispatch(sendMessageCreator())\r\n//             }\r\n//             let onNewMessageChange = (text) => {\r\n//                 store.dispatch(updateMessageCreator(text))\r\n//             }\r\n//             return <Dialogs messagesPage={store.getState().messagesPage}\r\n//                             updateMessageCreator={onNewMessageChange}\r\n//                             sendMessage={onSendMessageClick}/>\r\n//         }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateMessageCreator: (text) => {dispatch(updateMessageCreator(text))},\r\n        sendMessage: () => {dispatch(sendMessageCreator())}\r\n    }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","export default __webpack_public_path__ + \"static/media/user.aa43b272.png\";","import React from \"react\";\r\nimport c from './Users.module.css';\r\nimport * as axios from \"axios\";\r\nimport userPhoto from '../../assets/img/user.png'\r\n\r\nclass Users extends React.Component{\r\n\r\n    getUsers = () => {\r\n        if (this.prop.users.length === 0){\r\n            axios.get(\"https://social-network.samuraijs.com/api/1.0/users\").then(response => {\r\n                this.prop.setUsers(response.data.items);\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <button onClick={this.getUsers}>Get Users</button>\r\n                {\r\n                    this.prop.users.map(user =>\r\n                    <div key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={c.userPhoto}/>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button onClick={ () => {this.prop.unfollow(user.id)} }>Unfollow</button>\r\n                                : <button onClick={ () => {this.prop.follow(user.id)} }>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{'user.location.country'}</div>\r\n                            <div>{'user.location.city'}</div>\r\n                        </span>\r\n                    </span>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport UsersC from \"./UsersC\";\r\nimport {followAC, setUsersAC, unfollowAC} from \"../../redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (usersID) =>{\r\n            dispatch(followAC(usersID))\r\n        },\r\n        unfollow: (usersID) => {\r\n            dispatch(unfollowAC(usersID))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps )(UsersC);\r\nexport default UsersContainer;","import './App.css';\nimport React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nfunction App(prop) {\n    // console.log(prop)\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    {/*<Route path='/profile' component={Profile}/>*/}\n                    {/*<Route path='/dialogs' component={Dialogs}/>*/}\n\n                    <Route path='/profile' render={() => <Profile />}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer />}/>\n                    <Route path='/users' render={() => <UsersContainer />}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/reduxStore\";\nimport App from './App';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// store.subscribe(() => {\n//     renderTree(store.getState())\n// });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2zYR8\",\"dialogs_items\":\"Dialogs_dialogs_items__1Apx_\",\"item\":\"Dialogs_item__2_RN_\",\"minAva\":\"Dialogs_minAva__jVHj0\",\"mes\":\"Dialogs_mes__38kR7\",\"active\":\"Dialogs_active__c_zjJ\",\"messages\":\"Dialogs_messages__2aPmw\",\"message\":\"Dialogs_message__3zS1U\"};"],"sourceRoot":""}
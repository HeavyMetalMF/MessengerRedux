{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusHooks.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormRedux","reduxForm","form","console","log","onSubmit","handleSubmit","error","className","c","summaryErrorForm","onClick","activateEditMode","Field","name","component","Input","type","Textarea","Object","keys","profile","contacts","map","key","ProfileData","isOwner","fullName","lookingForAJob","aboutMe","contactTitle","contactValue","Contact","contact","ProfileInfo","Preloader","src","description","ava","photos","large","userPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Post","prop","item","message","likes","maxLength10","maxLengthCreator","MessageReduxForm","placeholder","validate","required","MyPosts","postsElements","posts","post","id","postsBlock","data","addPost","postText","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","userID","authUserID","history","push","getUsersProfile","getStatus","updateProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.57ffd1e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__tZYWH\",\"description\":\"ProfileInfo_description__1qwuq\",\"contact\":\"ProfileInfo_contact__2pRbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3CIJV\",\"postsBlock\":\"MyPosts_postsBlock__3FvNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2krKm\"};","import React, {useEffect, useState} from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () =>  {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode} >{ props.status || 'No status' }</span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus onBlur={deactivateEditMode} onChange={onStatusChange} value={status}\r\n                       />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusHooks;\r\n","import React from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () =>  {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () =>  {\r\n        this.setState({\r\n            editMode: false,\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode} >{this.props.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport c from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    console.log(props)\r\n    return(\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            {props.error ? <div className={c.summaryErrorForm}>\r\n                {props.error}\r\n            </div> : ''}\r\n            {<div><button onClick={props.activateEditMode}>Сохранить</button></div>}\r\n            ИЗМЕНЕНИЕ\r\n            <div><b>Логин:</b> {<Field name={'fullName'} component={Input} />}</div>\r\n            <div><b>Ищу ли я работу:</b> {<Field name={'lookingForAJob'} component={Input} type='checkbox'/>}</div>\r\n            <div><b>Мои навыки:</b> {<Field  name={'lookingForAJobDescription'} component={Textarea} type='checkbox'/>}</div>\r\n            <div><b>Обо мне:</b> {<Field name={'aboutMe'} component={Textarea} />}</div>\r\n            <div><b>Контакты:</b> {Object.keys(props.profile.contacts).map(key =>\r\n                <div key={key}>{key}: <Field name={'contacts.' + key} component={Input}/></div>)\r\n            }</div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({\r\n    form: 'edit-profile'\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormRedux;","import React, {useState} from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nimport userPhoto from \"../../../assets/img/user.png\";\r\n import ProfileDataFormRedux from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    console.log(props.profile)\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhoto = (e) => {\r\n        if (e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://via.placeholder.com/900x200'/>\r\n            </div>\r\n            <div className={c.description}>\r\n                <img className={c.ava}\r\n                     src={props.profile.photos.large || userPhoto}/>\r\n                <div>\r\n                    {props.isOwner ? <input type={'file'} onChange={mainPhoto}/> : ''}\r\n                </div>\r\n                {editMode ? <ProfileDataFormRedux initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/> : <ProfileData isOwner={props.isOwner}\r\n                                                                                      profile={props.profile}\r\n                                                                                      activateEditMode={activateEditMode}/>}\r\n            </div>\r\n            <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return(\r\n        <div>\r\n            {props.isOwner ? <div><button onClick={props.activateEditMode}>Редактировать</button></div> : ''}\r\n            <div><b>Логин:</b> {props.profile.fullName}</div>\r\n            <div><b>Ищу ли я работу:</b> {props.profile.lookingForAJob ? 'Да': 'Нет'}</div>\r\n            <div><b>Обо мне:</b> {props.profile.aboutMe}</div>\r\n            <div><b>Контакты:</b> {Object.keys(props.profile.contacts).map(key =>\r\n                <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>)\r\n            }</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Contact = (props) => {\r\n    return <div className={c.contact}><b>{props.contactTitle}:</b>{props.contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport c from './Post.module.css';\r\n\r\nconst Post = (prop) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src='https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1Rk3xj3SNsykl6tc1aFKIVZ6aaKTM5SRkZCeTgDn6uOyic'/>\r\n            {prop.message}\r\n            <div>\r\n                <span>Like</span> {prop.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'postText'} component={Textarea} placeholder={'Введите ваше сообщение'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={'button'} >Добавить пост</Field>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    // form: 'ProfileAddNewPostForm'\r\n    form: 'AddPost'\r\n})(MessageForm);\r\n\r\nconst MyPosts = (prop) => {\r\n    let postsElements = prop.posts.map(post => <Post key={post.id} likes={post.likes} message={post.message}/>);\r\n\r\n    let AddPost = (data) => {\r\n        // console.log(data);\r\n        prop.addPost(data.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={c.postsBlock}>\r\n            <h2>Мои посты</h2>\r\n            <MessageReduxForm  onSubmit={AddPost}/>\r\n            <div className={c.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostsContainer = (prop) => {\r\n//     // console.log(prop)\r\n//     // let state = prop.store.getState();\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n//                     let addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     };\r\n//\r\n//                     let onPostChange = (text) => {\r\n//                         store.dispatch(updateTextActionCreator(text));\r\n//                         // console.log(text)\r\n//                     }\r\n//                     return <MyPosts updateNewPostText={onPostChange}\r\n//                                     addPost={addPost}\r\n//                                     posts={state.profilePage.posts}\r\n//                                     newPostText={state.profilePage.newPostText}/>\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {dispatch(addPostActionCreator(postText))}\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    // console.log(prop)\r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer  extends React.Component{\r\n\r\n    updateProfile(){\r\n        let userId = this.props.match.params.userID;\r\n        if(!userId){\r\n            userId = this.props.authUserID;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID !== prevProps.match.params.userID){\r\n            this.updateProfile();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.props.isAuth)\r\n        return (\r\n            <div>\r\n                <Profile isOwner={!this.props.match.params.userID}\r\n                         {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserID: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n//\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, {getUsersProfile})(WithUrlDataContainerComponent);"],"sourceRoot":""}